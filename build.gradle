/*
 * Copyright 2019-2020 The Polypheny Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        // Shadowing; used to make a fat jar (https://github.com/johnrengelman/shadow)
        classpath group: "com.github.jengelman.gradle.plugins", name: "shadow", version: "6.1.0"
        // Lombok (https://plugins.gradle.org/plugin/io.freefair.lombok)
        classpath group: 'io.freefair.gradle', name: 'lombok-plugin', version: '5.0.1'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

apply plugin: 'java'
apply plugin: 'io.freefair.lombok'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'org.polypheny.qtf.Main'

group 'org.polypheny.qtf'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven {
        // DBIS Nexus
        url 'https://dbis-nexus.dmi.unibas.ch/repository/maven2/'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30' // License: MIT
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.0' // License: Apache 2.0
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0' // License: Apache 2.0

    implementation group: 'com.github.serceman', name: 'jnr-fuse', version: '0.5.4' // License: MIT
    implementation group: "org.apache.commons", name: "commons-lang3", version: '3.11' // License: Apache 2.0
    implementation group: "com.google.code.gson", name: "gson", version: '2.8.6' // License: Apache 2.0

    implementation group: 'com.konghq', name: 'unirest-java', version: '3.11.09' // License: MIT
    implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.5.1' // License: MIT

    runtimeOnly group: 'org.openjfx', name: 'javafx-graphics', version: '15.0.1', classifier: 'win'
    runtimeOnly group: 'org.openjfx', name: 'javafx-graphics', version: '15.0.1', classifier: 'mac'
    runtimeOnly group: 'org.openjfx', name: 'javafx-graphics', version: '15.0.1', classifier: 'linux'
}

test {
    useJUnitPlatform()
}

javafx {
    version = '15.0.1'
    modules = [ 'javafx.controls', 'javafx.fxml']
}

/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": project.version
        attributes "Main-Class": mainClassName
        attributes "Multi-Release": "true"
        attributes "Implementation-Version": project.version
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}
shadowJar {
    zip64 true
    classifier = ""
}
assemble.dependsOn shadowJar
artifacts {
    //archives jar // regular jar containing only the compiled source
    archives shadowJar // fat jar which additionally contains all dependencies
    archives sourcesJar // jar file containing the java doc files
    archives javadocJar // jar file containing the source files
}
